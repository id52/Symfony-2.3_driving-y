{% extends 'AppBundle::admin.html.twig' %}
{% trans_default_domain 'profile' %}

{% block content %}
    <h3>{{ 'admin.add_user_title'|trans({}, 'messages') }}</h3>
    <hr>

    {{ form_start(form) }}
        {{ form_errors(form) }}

        <fieldset>
            <legend>{{ 'profile_registr_data'|trans }}:</legend>
            {{ form_row(form.email) }}
            {{ form_row(form.moderated) }}
            {{ form_row(form.paid) }}
        </fieldset>

        <fieldset>
            <legend>{{ 'profile_registr_data'|trans }}:</legend>
            {{ form_row(form.last_name) }}
            {{ form_row(form.first_name) }}
            {{ form_row(form.patronymic) }}
        </fieldset>

        <fieldset>
            <legend>{{ 'profile_passport_data'|trans }}:</legend>
            {{ form_row(form.foreign_passport) }}
            {{ form_row(form.sex) }}
            {{ form_row(form.birthday) }}
            {{ form_row(form.foreign_passport_number) }}
            {{ form_row(form.passport_number) }}
            {{ form_row(form.passport_rovd) }}
            {{ form_row(form.passport_rovd_number) }}
            {{ form_row(form.passport_rovd_date) }}
        </fieldset>

        <fieldset>
            <legend>{{ 'profile_birth_place'|trans }}:</legend>
            {{ form_row(form.birth_country) }}
            {{ form_row(form.birth_region) }}
            {{ form_row(form.birth_city) }}
        </fieldset>

        <fieldset>
            <legend></legend>
            {{ form_row(form.not_registration) }}
        </fieldset>

        <fieldset id="registration_data">
            <legend>{{ 'profile_registration_data'|trans }}:</legend>
            {{ form_row(form.registration_country) }}
            {{ form_row(form.registration_region) }}
            {{ form_row(form.registration_city) }}
            {{ form_row(form.registration_street) }}
            {{ form_row(form.registration_house) }}
            {{ form_row(form.registration_stroenie) }}
            {{ form_row(form.registration_korpus) }}
            {{ form_row(form.registration_apartament) }}
        </fieldset>

        <fieldset id="place_data">
            <legend>{{ 'profile_place_data'|trans }}:</legend>
            {{ form_row(form.place_country) }}
            {{ form_row(form.place_region) }}
            {{ form_row(form.place_city) }}
            {{ form_row(form.place_street) }}
            {{ form_row(form.place_house) }}
            {{ form_row(form.place_stroenie) }}
            {{ form_row(form.place_korpus) }}
            {{ form_row(form.place_apartament) }}
        </fieldset>

        <fieldset id="work">
            <legend>{{ 'profile_work'|trans }}:</legend>
            {{ form_row(form.work_place) }}
            {{ form_row(form.work_position) }}
        </fieldset>

        <fieldset>
            <legend>{{ 'profile_phone_data'|trans }}:</legend>
            {#<div class="control-group{% if form.phone_home.vars.errors|length > 0 %} error{% endif %}">#}
                {#{{ form_label(form.phone_home) }}#}
                {#<div class="controls">#}
                    {#<div class="input-prepend">#}
                        {#<span class="add-on">+7</span>#}
                        {#{{ form_widget(form.phone_home, { attr: { class: 'span2' }}) }}#}
                    {#</div>#}
                    {#{% if form.phone_home.vars.help is defined and form.phone_home.vars.help %}#}
                        {#<span class="help-inline">{{ form.phone_home.vars.help|trans }}</span>#}
                    {#{% endif %}#}
                    {#{{ form_errors(form.phone_home) }}#}
                {#</div>#}
            {#</div>#}
            <div class="control-group{% if form.phone_mobile.vars.errors|length > 0 %} error{% endif %}">
                {{ form_label(form.phone_mobile) }}
                <div class="controls">
                    <div class="input-prepend">
                        <span class="add-on">+7</span>
                        {{ form_widget(form.phone_mobile, { attr: { class: 'span2' }}) }}
                    </div>
                    {% if form.phone_mobile.vars.help is defined and form.phone_mobile.vars.help %}
                        <span class="help-inline">{{ form.phone_mobile.vars.help|trans }}</span>
                    {% endif %}
                    {{ form_errors(form.phone_mobile) }}
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>{{ 'profile_additional_info'|trans }}:</legend>
            {{ form_row(form.region) }}
            {{ form_row(form.region_place) }}
            {{ form_row(form.category) }}
            {{ form_row(form.with_at) }}
            {{ form_row(form.paradox_id) }}
            {{ form_row(form.webgroup) }}
            {{ form_row(form.close_final_exam) }}
        </fieldset>

        <div class="form-actions">
            <div class="alert alert-info" role="alert" id="pay-amount-info">
            </div>
            <button type="submit" class="btn btn-success"><i class="fa fa-download"></i> {{ 'admin.buttons.create'|trans({}, 'messages') }}</button>
            {% if user is defined %}
                <a class="btn pull-right" href="{{ path('admin_precheck_user_view', { id: user.id }) }}"><i class="fa fa-arrow-left"></i> {{ 'admin.buttons.back_to_view'|trans({}, 'messages') }}</a>
            {% endif %}
        </div>
    {{ form_end(form) }}
{% endblock content %}

{% block js %}
<script>
$(function() {
    var show_registration = function() {
        $('#place_data').hide();
        $('#profile_place_country').removeAttr('required');
        $('#profile_place_city').removeAttr('required');
        $('#profile_place_street').removeAttr('required');
        $('#profile_place_house').removeAttr('required');
        $('#profile_place_apartament').removeAttr('required');
        $('#profile_registration_country').attr('required', 'required');
        $('#profile_registration_city').attr('required', 'required');
        $('#profile_registration_street').attr('required', 'required');
        $('#profile_registration_house').attr('required', 'required');
        $('#profile_registration_apartament').attr('required', 'required');
        $('#registration_data').show();
    };

    var show_place = function() {
        $('#registration_data').hide();
        $('#profile_registration_country').removeAttr('required');
        $('#profile_registration_city').removeAttr('required');
        $('#profile_registration_street').removeAttr('required');
        $('#profile_registration_house').removeAttr('required');
        $('#profile_registration_apartament').removeAttr('required');
        $('#profile_place_country').attr('required', 'required');
        $('#profile_place_city').attr('required', 'required');
        $('#profile_place_street').attr('required', 'required');
        $('#profile_place_house').attr('required', 'required');
        $('#profile_place_apartament').attr('required', 'required');
        $('#place_data').show();
    };

    var not_registration = $('#profile_not_registration');

    not_registration.change(function() {
        if ($(this).is(':checked')) {
            show_place();
        } else {
            show_registration();
        }
    });

    if (not_registration.is(':checked')) {
        show_place();
    } else {
        show_registration();
    }

    var foreign_passport = $('#profile_foreign_passport');
    var foreign_passport_change = function() {
        var passport_number = $('#profile_passport_number_number');
        var foreign_passport_number = $('#profile_foreign_passport_number');
        if (foreign_passport.is(':checked')) {
            passport_number.closest('.control-group').hide();
            passport_number.removeAttr('required');
            $('#profile_passport_number_series').removeAttr('required');
            foreign_passport_number.attr('required', 'required');
            foreign_passport_number.closest('.control-group').show();
        } else {
            foreign_passport_number.closest('.control-group').hide();
            foreign_passport_number.removeAttr('required');
            passport_number.attr('required', 'required');
            $('#profile_passport_number_series').attr('required', 'required');
            passport_number.closest('.control-group').show();
        }
    };
    foreign_passport.change(foreign_passport_change);
    foreign_passport_change();

    {% if user is not defined %}
    var profile_region = $('#profile_region');

    var region_places_tree = eval({{ region_places_tree|json_encode|raw }});
    var rp_element = $('#profile_region_place');
    var update_region_places = function() {
        var region = profile_region.val();
        rp_element.find('option:not(:first-child)').remove();
        if (region_places_tree[region]) {
            for (var i in region_places_tree[region]) {
                if (region_places_tree[region].hasOwnProperty(i)) {
                    $('<option></option>')
                        .attr('value', i)
                        .text(region_places_tree[region][i])
                        .appendTo(rp_element)
                    ;
                }
            }
        }
    };
    update_region_places();

    var region_categories = eval({{ region_categories|json_encode|raw }});
    var category = $('#profile_category');
    var update_region_categories = function() {
        var region = profile_region.val();
        category.find('option:not(:first-child)').remove();
        if (region_categories[region]) {
            for (var i in region_categories[region]) {
                if (region_categories[region].hasOwnProperty(i)) {
                    $('<option></option>')
                        .attr('value', i)
                        .text(region_categories[region][i]['name'])
                        .appendTo(category)
                    ;
                }
            }
        }
        $('#profile_with_at').closest('.control-group').hide();
    };
    update_region_categories();

    category.change(function() {
        var with_at = $('#profile_with_at');
        with_at.closest('.control-group').hide();
        var region = profile_region.val();
        var i = $(this).val();
        if (region_categories[region][i]['with_at']) {
            with_at.closest('.control-group').show();
        }
    });

    profile_region.change(function() {
        update_region_places();
        update_region_categories();
    });

    $('#profile_region, #profile_category, #profile_with_at, #profile_paid').on('change', function() {
        var region_id = profile_region.val();
        var category_id = category.val();
        if (region_id && category_id) {
            var pay_amount_info = $('#pay-amount-info');
            $.ajax({
                type: 'GET',
                url: '{{ path('admin_calc_pay_amount_ajax') }}',
                data: {
                    region_id: profile_region.val(),
                    category_id: category.val(),
                    with_at: $('#profile_with_at').is(':checked') ? 1 : 0,
                    paid: $('#profile_paid').val()
                },
                success: function(data) {
                    if (data.sum > 0) {
                        pay_amount_info.html(data.sum + ' руб.').show();
                    } else {
                        pay_amount_info.html('').hide();
                    }
                }
            });
        }
    });

    {% endif %}
});
</script>
{% endblock js %}
