{% extends 'AppBundle::layout_new.html.twig' %}

{% block content %}
    <div class="main_t">
        <h1>{{ 'ticket_num'|trans({ '%ticket%': question.ticketNum }) }}</h1>
        {% if end_time %}
            <div class="test_time">
                <div class="time">
                    <div id="note">0:00</div>
                </div>
            </div>
        {% endif %}
        <span class="haw_qwe" data-toggle="modal" data-target="#help_modal"><img src="/img/qwestion.png" alt="" title="" /></span>
    </div>
    <div id="test">
        <div class="nav_test">
            {% for key in answers|keys %}
                {% if num == key %}
                    <span class="active">{{ loop.index }}</span>
                {% else %}
                    <span {{ answers[key] ? (answers[key].correct ? ' class="tr"' : ' class="wr"') : '' }}>{{ loop.index }}</span>
                {% endif %}
            {% endfor %}
        </div>
        <div class="need_comment">
            <form action="{{ path('my_test_comment') }}">
                <span class="text">{{ 'test_comments'|trans }}</span>
                <input type="checkbox"{{ is_comment ? ' checked="checked"' : '' }} onClick="$(this).closest('form').submit()" />
            </form>
        </div>
        <div class="form_unswer">
            <div class="alert-error clear">
                {{ settings['training_test_error'] }}
                {% if is_comment %}
                <br><br>
                {{ question.description }}
                {% endif %}
            </div>
            <br />
            {% if is_comment %}
                <input type="button" onclick="document.location.href = '{{ path('my_test') }}';" value="{{ 'buttons.continue'|trans }}" class="pull_right red_btn">
            {% endif %}
        </div>
    </div>
{% endblock content %}

{% block js %}
<script>
$(function() {
    {% if end_time %}
    n = new Date();
    $('.test_time .time #note').countdown({
        until: new Date(n.getFullYear()+{{ rem_time.y }}, n.getMonth()+{{ rem_time.m }}, n.getDate()+{{ rem_time.d }}, n.getHours()+{{ rem_time.h }}, n.getMinutes()+{{ rem_time.i }}, n.getSeconds()+{{ rem_time.s }}, 0),
        layout: '{mn}{sep}{snn}',
        onTick: function(periods) {
            var seconds = $.countdown.periodsToSeconds(periods);
            if (60 > seconds) {
                $(this).addClass('text-error');
            }
            if (30 > seconds) {
                $(this).addClass('blink');
            }
        }
    });
    {% endif %}

    {% if not is_comment %}
    setTimeout(function() {
        location.assign('{{ path('my_test') }}');
    }, 1000);
    {% endif %}
});
</script>
{% endblock js %}
