{% extends 'AppBundle::layout_new.html.twig' %}

{% block start_content %}
<div id="modal-max-errors" class="modal border-red">
    <div class="notice bg-sad">
        <div class="title">Вы не сдали</div>
        {{ settings['training_test_max_errors']|raw }}
        <div class="links">
            <a class="bg-green" href="{{ path('my_test_continue') }}">{{ 'buttons.continue'|trans }}</a>
            <a class="bg-red" href="{{ path('my_test_quit') }}">{{ 'buttons.quit'|trans }}</a>
        </div>
    </div>
    <span class="close"></span>
</div>

<div id="modal-complete" class="modal border-green">
    <div class="notice bg-prize">
        <div class="title">Поздравляем</div>
        {{ settings['training_test_complete']|raw }}
        <div class="links">
            <a class="bg-green" href="{{ path('my_test') }}">{{ 'test_return'|trans }}</a>
        </div>
    </div>
    <span class="close"></span>
</div>

<div id="modal-quit" class="modal border-red wid2">
    <div class="notice center">
        <div class="title">Прервать тест</div>
        Вы уверены что хотите прервать тест?
        <div class="links">
            <a class="bg-green" href="{{ path('my_test_quit') }}">Да</a>
            <a class="bg-red" href="#">Нет</a>
        </div>
    </div>
    <span class="close"></span>
</div>

<div id="modal-timeout" class="modal">
    <div class="notice bg-time">
        <div class="title">Время закончилось</div>
        {{ settings['training_test_timeout']|raw }}
        <div class="links">
            <a class="bg-red" href="{{ path('my_test') }}">{{ 'buttons.quit'|trans }}</a>
        </div>
    </div>
    <span class="close"></span>
</div>

<div id="modal-error" class="modal border-red">
    <div class="notice">
        <div class="title">Вы дали неверный ответ на вопрос</div>
        <div class="comment"></div>
        <div class="links">
            <a class="bg-red" href="#">Продолжить</a>
        </div>
    </div>
    <span class="close"></span>
</div>
{% endblock start_content %}

{% block content %}
<nav class="path">
    <a href="{{ path('homepage') }}">{{ 'titles.homepage'|trans }}</a>
    » <strong>{{ 'titles.test'|trans }}</strong>
</nav>

<div class="mainContent">
    <section id="test-content" class="test">
        {% if settings['ticket_test_old_style'] %}
            {% include 'AppBundle:My:test_in.html.twig' %}
        {% else %}
            {% include 'AppBundle:My:test_with_tiles.html.twig' %}
        {% endif %}
    </section>
</div>
{% endblock content %}

{% block js %}
    <script src="/v2/js/jquery.countdown.js"></script>
    <script>
        $(function() {
            var test = function () {
                var timer = $('.timer, .b_countdown');
                if (timer.length) {
                    timer.countdown({
                        until: timer.data('seconds-left'),
                        {% if settings['ticket_test_old_style'] %}
                        layout: '{mn}{sep}{snn}',
                        {% else %}
                        layout: '<span class="minutes">{mn}</span>{sep} <span class="seconds">{snn}</span>',
                        {% endif %}
                        onExpiry: function() {
                            error('timeout');
                        }
                    });
                }

                var error = function(type) {
                    switch(type) {
                        case 'longtime':
                            location.assign('{{ path('my_test') }}');
                            break;
                        case 'timeout':
                            $.simplebox('#modal-timeout');
                            break;
                        case 'max_errors':
                            $.simplebox('#modal-max-errors');
                            break;
                        default:
                    }
                };

                var modal_quit = $('#modal-quit');
                $('.bg-red', modal_quit).click(function(e) {
                    e.preventDefault();
                    $.simplebox.close();
                });

                var modal_error = $('#modal-error');
                $('.bg-red', modal_error).click(function(e) {
                    e.preventDefault();
                    $.simplebox.close();
                    $('form').submit();
                });

                $('.exit-link').click(function(e) {
                    e.preventDefault();
                    $.simplebox('#modal-quit', { overlay: { opacity: 0.5 } });
                });

                $('.answer').find('input').removeAttr('disabled');
                $('.answer-link.bg-red').hide();

                var is_continue = false;
                var form = $('form');

                form.submit(function(e) {
                    e.preventDefault();

                    $('.error-fill-in', this).remove();

                    if ($('input[name="answer"]:checked', this).length == 0){
                        var fillInDiv = '<div class="error-fill-in">Необходимо выбрать вариант ответа</div>';

                        $('.bottom.links', this).before(fillInDiv);
                        return false;
                    }

                    $('.answer-link').hide();
                    if (is_continue) {
                        {% if settings['ticket_test_old_style'] %}
                        $.getJSON('{{ path('my_test_next_question_ajax') }}', function(data) {
                            if (data.error) {
                                error(data.error);
                            } else if (data.complete) {
                                if (data.max_errors) {
                                    $.simplebox('#modal-complete-errors');
                                } else {
                                    $.simplebox('#modal-complete');
                                }
                            } else {
                                $('#test-content').html(data.content);
                                test();
                            }
                        });
                        {% endif %}
                    } else {
                        $.post(form.attr('action'), form.serialize(), function(data) {
                            if (data.error) {
                                error(data.error);
                            } else {
                                var answer = $('#answer_' + data.c_answer).closest('.answer');
                                if (data.correct) {
                                    answer.addClass('ok');
                                    answer.append('<div class="err-text">Верный ответ</div>');
                                } else {
                                    answer.addClass('error');
                                    answer.append('<div class="err-text">Неверный ответ</div>');
//                            $('.errors').find('span').html(data.errors);
                                    if (data.comment) {
                                        $.simplebox('#modal-error', { duration: 0 });
                                        $('.comment', modal_error).html(data.comment);
                                    }
                                }
                                is_continue = true;

                                $('.answer-link.bg-red').show();
                                $('.answer').find('input').attr('disabled', 'disabled');
                            }
                        }, 'json');
                    }
                });

                {% if not settings['ticket_test_old_style'] %}
                $('a', '.b_question_block').click(function(e) {
                    e.preventDefault();
                    $.getJSON($(this).attr('href'), function(data) {
                        $('#test-content').html(data.content);
                    }).done(function() {
                        test();
                    });
                });

                $('#choose_another').click(function(e) {
                    e.preventDefault();
                    $.getJSON('{{ path('my_test_next_question_ajax') }}')
                        .done(function(data) {
                            if (data.error) {
                                error(data.error);
                            } else if (data.complete) {
                                if (data.max_errors) {
                                    $.simplebox('#modal-complete-errors');
                                } else {
                                    $.simplebox('#modal-complete');
                                }
                            } else {
                                $('#test-content').html(data.content);
                                test();
                            }
                        });
                });
                {% endif %}
            };
            test();
        });
    </script>
{% endblock js %}
